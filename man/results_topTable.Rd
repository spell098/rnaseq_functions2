% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/results_topTable.R
\name{results_topTable}
\alias{results_topTable}
\title{Calculate results}
\usage{
results_topTable(lm2.contrast, expr.toBind, pvalue = 0.05, logFC = 1, type,
  genes_annotation_unique, annotations, adjust = "no", ensemblTable)
}
\arguments{
\item{lm2.contrast}{MArrayLM object}

\item{expr.toBind}{Expression data.matrix with supplemental colums: module and ID}

\item{pvalue}{p-value limit (alpha)}

\item{logFC}{log2 fold change limit #VERIFY IT IS REALLY LOG2 (default = 1)}

\item{genes_annotation_unique}{All the annotations for every ID in the 2nd row in expr.toBind
(or rownames of expr.matrix)}

\item{annotations}{Annotation (???)}

\item{adjust}{Which correction for multiple analysis to use (default = "no").
Note: None is different than no somehow}
}
\value{
\describe{
 \item{results}{topTable of only the significant results}
 \item{topTable3}{Complete topTable}
}
}
\description{
Calculate results
}
\examples{
expr.matrix <- readRDS("data/expr_matrix_LGVD.rds")

type <- "ensembl_gene_id"
design <- design_contrasts(get_names(colnames(expr.matrix)))
lm2 <- lm2Contrast(expr.matrix,design)
lm2.contrast = lm2[[1]]
contrasts=lm2[[2]]
contrast.matrix=lm2[[3]]
names <- get_names(expr.matrix)
specie_genome = "hsapiens_gene_ensembl"
attribute <- "ensembl_gene_id"
externalSymbol <- "hgnc_symbol"
ensemblTable <- convert_id(specie_genome,attribute)
genes <- ensemblTable[as.character(ensemblTable[,attribute]) != "",]
annotation <- annotate_ensembl(unique(as.character(ensemblTable[,type])),type)
annotations <- annotation[[1]]
go <- annotation[[2]]
genes_annotation_unique <- annotation[[3]]
pvalue = 0.05
logFC = c(-0.9,0.9)
type <- "ensembl_gene_id"
results_list <- results_topTable(lm2.contrast,expr.toBind,pvalue,logFC,type,genes_annotation_unique,annotations,"no")
results = results_list[[1]]
topTable3 = results_list[[2]]
#Example with online dataset fuzzy
gset <- getGEO("GSE25860", GSEMatrix =TRUE) #GSE25860 GSE61276 affy_hg_u133_plus_2

exprset <- gset[[1]]
type <- "ensembl_gene_id"
expr.matrix <- exprs(exprset)
names1 <- get_names(sampleNames(exprset))
comparisons <- comparisonsPheno(exprset)[[1]]
comparisonsTable <- comparisonsPheno(exprset)[[2]]
specie_genome = "hsapiens_gene_ensembl"
specie <- "hsapiens"
attribute <- "illumina_humanht_12_v4"
externalSymbol <- "hgnc_symbol"
#ensemblTable <- annotation_biomart(rownames(expr.matrix),specie,attribute)
annotationFile <- paste0("annotations/databases/",specie,"_ensembl_",attribute,".csv")
ensemblTable <- read.csv(annotationFile)
genes <- ensemblTable[as.character(ensemblTable[,attribute]) != "",]
annotation <- annotate_ensembl(genes[,1],type)
annotations <- annotation[[1]]
go <- annotation[[2]]
genes_annotation_unique <- annotation[[3]]
pvalue = 0.05
logFC = c(-0.9,0.9)
annotationFile <- paste0("annotations/databases/",specie,"_ensembl_",attribute,".csv")
ensemblTable <- read.csv(annotationFile)

#clusters <- fuzzy_clustering(expr.matrix,3)[[1]]
#color = unlist(lapply(clusters,function(x){wes()[x]}))
#namesColor = paste0("a",clusters)
comparisons = get_comparisons(namesColor)
clusterNames = numberNames(namesColor)
selectedVariables = comparisons[1]
namesTable <- comparisonsTable
names2 <- namesSelectedComparisons(namesTable)
design = design_contrasts(names2)
expr.toBind <- NULL
names2 = conditionsChoice(selectedVariables,namesColor)
design = design_contrasts(names2)
expr.toBind <- cbind(expr.matrix,module = rep("white",nrow(expr.matrix)))
lm2=lm2Contrast(expr.matrix,design)
lm2.contrast = lm2[[1]]
contrasts=lm2[[2]]
contrast.matrix=lm2[[3]]
results_list = results_topTable(lm2.contrast,expr.toBind,pvalue,logFC,type,genes_annotation_unique,annotations,"no",ensemblTable)
results = results_list[[1]]
topTable3 = results_list[[2]]
}
\author{
Simon J Pelletier
}
\seealso{
\code{\link[limma]{topTable}} ,
\code{\link[limma]{MArrayLM}} ,
\code{\link{transcript_count}} ,
\code{\link{expr.toBind}}
}
\keyword{limma}
\keyword{linear}

