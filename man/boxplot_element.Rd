% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boxplot_element.R
\name{boxplot_element}
\alias{boxplot_element}
\title{Generate boxplots of every groups for a selected gene. Also display stars for significance between groups}
\usage{
boxplot_element(selectedGene, names, expr.matrix, resultsSummary, comparisons,
  color, grouped = TRUE, nbins = 20)
}
\arguments{
\item{selectedGene}{Gene selected to display boxplots for each groups compared}

\item{names}{A vector of the names of all samples}

\item{expr.matrix}{A matrix of standardized data. Columns = samples, rows = genes,transcripts,CpG...}

\item{resultsSummary}{A matrix of data from every gene that is significanlty different
between at least two groups. Columns = samples, rows = genes,transcripts,CpG...}

\item{color}{The colors of all boxplot. One color for each group. Could be found in the function, not imported}

\item{names.unique}{A vector of the names of all groups}

\item{results}{The results of every comparisons}
}
\description{
Generate boxplots of every groups for a selected gene. Also display stars for significance between groups
}
\note{
The function should require less input.
names and names.unique could be removed by changing the code
only the line from the selected gene should be imported, not every object to select it.
This would remove expr.matrix,resultsSummary,results,selectedGene
colors could also be found in the function. this would leave only a vector from expr.matrix(data) and a vector from resultsSummary(significance)
}
\examples{
gset <- getGEO("GSE12654", GSEMatrix =TRUE)
exprset <- gset[[1]]
typeID <- "ID"
expr.matrix <- exprs(exprset)
names1 <- get_names(sampleNames(exprset))[[1]]
comparisons <- comparisonsPheno(exprset)[[1]]
comparisonsTable <- comparisonsPheno(exprset)[[2]]
annotation1 <- annotation_geo(annotation(exprset))
goGPL <- annotation1[,c(colnames(annotation1)[grep("ontology",colnames(annotation1),ignore.case=TRUE)],"symbol")]
write.table(goGPL,"goTable.txt",sep=";",quote=FALSE,col.names=FALSE,row.names=FALSE)
annotations <- annotation1[,c("ID","symbol","entrezgene_id")]
system("bash annotateGPL.sh")
go<-read.csv("goTable3.txt")
genes_annotation_unique <- annotations[!duplicated(as.character(annotations[,typeID])),]
pvalue = 0.05
logFC = c(-2,2)
clusters <- fuzzy_clustering(expr.matrix,3)[[1]]
color = unlist(lapply(clusters,function(x){wes()[x]}))
namesColor = paste0("a",clusters)
comparisons = get_comparisons(namesColor)
clusterNames = numberNames(namesColor)
selectedVariables = comparisons[1]
names2 = conditionsChoice(selectedVariables,namesColor)
design = design_contrasts(names2)
expr.toBind <- NULL
lm2=lm2Contrast(expr.matrix,design)
lm2.contrast = lm2[[1]]
contrasts=lm2[[2]]
contrast.matrix=lm2[[3]]
results_list = results_topTable(lm2.contrast,expr.toBind,pvalue,logFC,typeID,genes_annotation_unique,annotations,"BH")
results = results_list[[1]]
topTable3 = results_list[[2]]
resultsSummary = results_summary(results,topTable3,"BH",typeID)
selectedGene <- rownames(resultsSummary[1,])
boxplot_element(selectedGene,names2,expr.matrix,resultsSummary,results,color)


expr.matrix <- readRDS("data/expr_matrix_LGVD.rds")
results <- readRDS("data/expr_matrix_LGVD.rds")
selectedGene <- "ENSRNOG00000046319"
topTable3 <- readRDS("data/topTable3_LGVD.rds")
resultsSummary <- results_summary(results,topTable3)
color <- c("green","blue","red")
boxplot_element(selectedGene,names2,expr.matrix,resultsSummary,results,color,grouped=FALSE)
}
\author{
Simon J Pelletier
}
\seealso{
\code{\link[GEOquery]{getGEO}} ,
\code{\link[GEOquery]{Meta}} ,
\code{\link[GEOquery]{Table}} ,
\code{\link[annotate]{readGEOAnn}}
}
\keyword{annotation}
\keyword{geo}

